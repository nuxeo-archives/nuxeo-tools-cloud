---
- name: Install nuxeo dependencies
  apt: name={{item}} state=present
  with_items:
  - libreoffice
  - imagemagick
  - poppler-utils
  - ffmpeg2theora
  - ufraw
  - libwpd-tools
  - exiftool
- name: Download JDK 8
  get_url:
    url: http://download.oracle.com/otn-pub/java/jdk/8u65-b17/jdk-8u65-linux-x64.tar.gz
    dest: /tmp/jdk-8-linux-x64.tgz
    validate_certs: no
    headers: "Cookie: oraclelicense=accept-securebackup-cookie"
- name: Install JDK 8
  command: tar xzf /tmp/jdk-8-linux-x64.tgz
  args:
    creates: /usr/lib/jvm/jdk1.8.0_65
    chdir: /usr/lib/jvm
  register: extracted_java8
- name: Remove JDK 8 archive
  file: path=/tmp/jdk-8-linux-x64.tgz state=absent
- name: Create JDK 8 symlink
  file: src=/usr/lib/jvm/jdk1.8.0_65 path=/usr/lib/jvm/java-8 state=link
  when: extracted_java8.changed
- name: Install alternatives for JDK 8
  shell: update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-8/jre/bin/java 1081
- name: Update alternatives for JDK 8
  shell: update-alternatives --set java /usr/lib/jvm/java-8/jre/bin/java
- name: Add multiverse repositorise
  apt_repository: repo="{{item}}" update_cache=false
  with_items:
    - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
    - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
    - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-security multiverse'
  register: multiverse_installed
  when: ansible_distribution == 'Ubuntu' and compile_ffmpeg
- name: Refresh apt cache
  apt: update_cache=true
  when: compile_ffmpeg and multiverse_installed.changed
- name: Install git
  apt: name=git state=present
  when: compile_ffmpeg
- name: Check for system ffmpeg
  stat: path=/usr/bin/ffmpeg
  register: system_ffmpeg
  when: compile_ffmpeg
- name: Check for custom ffmpeg
  stat: path=/usr/local/bin/ffmpeg
  register: custom_ffmpeg
  when: compile_ffmpeg
- name: Check if we should compile ffmpeg
  set_fact:
    ffmpeg_exists: "{{system_ffmpeg.stat.exists or custom_ffmpeg.stat.exists}}"
  when: compile_ffmpeg
- name: Get ffmpeg compile scripts
  git: repo=https://github.com/nuxeo/ffmpeg-nuxeo.git dest=/tmp/ffmpeg
  when: compile_ffmpeg and not ffmpeg_exists|bool
- name: Compile ffmpeg
  shell: ./build-all.sh true
  args:
    chdir: /tmp/ffmpeg
  environment:
    BUILD=YASM: true
  when: compile_ffmpeg and not ffmpeg_exists|bool
- name: Cleanup ffmpeg build directory
  file: path=/tmp/ffmpeg state=absent
  when: compile_ffmpeg

